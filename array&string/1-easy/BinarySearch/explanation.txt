1. Initialize two pointers: left at 0 and right at len(nums) - 1.
2. While left is less than or equal to right:
    a. Compute mid as (left + right) // 2.
    b. If nums[mid] equals target, return mid (target found).
    c. If nums[mid] is less than target, move left to mid + 1.
    d. If nums[mid] is greater than target, move right to mid - 1.
3. If the loop ends without finding target, return -1.


time complexity: O(log n), where n is the length of nums.
space complexity: O(1), as we are using only a few variables for pointers.